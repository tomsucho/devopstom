---
# Source: coredns/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-coredns-coredns
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-coredns"
    helm.sh/chart: "coredns-1.13.8"
    app.kubernetes.io/name: coredns
data:
  Corefile: |-
    .:53 {
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus 0.0.0.0:9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
        etcd internal.k8s {
            stubzones
            path /skydns
            endpoint http://etcd-cluster-client.app.svc:2379
        }
    }
---
# Source: coredns/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-coredns-coredns
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-coredns"
    helm.sh/chart: "coredns-1.13.8"
    app.kubernetes.io/name: coredns
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - pods
  - namespaces
  verbs:
  - list
  - watch
---
# Source: coredns/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-coredns-coredns
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-coredns"
    helm.sh/chart: "coredns-1.13.8"
    app.kubernetes.io/name: coredns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-coredns-coredns
subjects:
- kind: ServiceAccount
  name: default
  namespace: app
---
# Source: coredns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-coredns-coredns
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-coredns"
    helm.sh/chart: "coredns-1.13.8"
    app.kubernetes.io/name: coredns
  annotations:
    {}
spec:
  selector:
    app.kubernetes.io/instance: "my-coredns"
    app.kubernetes.io/name: coredns
  ports:
  - {port: 53, protocol: UDP, name: udp-53}
  type: LoadBalancer
---
# Source: coredns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-coredns-coredns
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-coredns"
    helm.sh/chart: "coredns-1.13.8"
    app.kubernetes.io/name: coredns
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 25%
  selector:
    matchLabels:
      app.kubernetes.io/instance: "my-coredns"
      app.kubernetes.io/name: coredns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coredns
        app.kubernetes.io/instance: "my-coredns"
      annotations:
        checksum/config: ca1721e433231139297680e1ea9f2d65eae8ea80ee3cdb88fd2a6119cf0ea8b6
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: default
      containers:
      - name: "coredns"
        image: "coredns/coredns:1.7.1"
        imagePullPolicy: IfNotPresent
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        ports:
        - {containerPort: 53, protocol: UDP, name: udp-53}
        - {containerPort: 53, protocol: TCP, name: tcp-53}
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
        - name: config-volume
          configMap:
            name: my-coredns-coredns
            items:
            - key: Corefile
              path: Corefile
